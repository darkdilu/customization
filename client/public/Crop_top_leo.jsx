/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 crop_top_leo.glb 
*/
import React, { useEffect, useRef, useState } from 'react'
import { OrbitControls, useGLTF, useTexture } from '@react-three/drei'
import polyster from './second_design.jpg';
import axios from 'axios';
import { Buffer } from 'buffer';
import { useFrame } from '@react-three/fiber';


export default function Model(props) {

  const groupRef = useRef();

 {/* useFrame(({ clock }) => {
    const time = clock.getElapsedTime();

    if (time % 20 >= 0 && time % 20 < 10) {
     
      groupRef.current.rotation.y = time * 0.7;
    } else {
      
      groupRef.current.rotation.y = 0;
    }
  }); */}


const[front_on,setFront_on]=useState(0)
const[back_on,setBack_on]=useState(0)


const[right_on,setRight_on]=useState(0)
const[left_on,setLeft_on]=useState(0)

  const[iamge_backend,setBackend_image]=useState()

  const[iamge_backend2,setBackend_image2]=useState()


  const[iamge_backend3,setBackend_image3]=useState()

  const[iamge_backend4,setBackend_image4]=useState()


    const [images, setImages] = useState([]);


  useEffect(() => {
    fetchImages();



    const interval = setInterval(fetchImages, 5000); // Fetch every 5 seconds

    return () => clearInterval(interval);
  }, []);



  useEffect(() => {
      const material = props.material; 
      images.forEach((image) => {
          if (material === image.name  && selected_part === "Front Part") {
              console.log(image.name)
              let source = `data:image/${image.img.contentType};base64,${Buffer.from(image.img.data).toString('base64')}`
              setBackend_image(source);
              setFront_on(1)
          }
          if (material === image.name  && selected_part === "Back Part") {
            console.log(image.name)
            let source = `data:image/${image.img.contentType};base64,${Buffer.from(image.img.data).toString('base64')}`
            setBackend_image2(source);
            setBack_on(1)
        }


        if (material === image.name  && selected_part === "Rigt Hand") {
          console.log(image.name)
          let source = `data:image/${image.img.contentType};base64,${Buffer.from(image.img.data).toString('base64')}`
          setBackend_image3(source);
          setRight_on(1)
      }


      if (material === image.name  && selected_part === "Left Hand") {
        console.log(image.name)
        let source = `data:image/${image.img.contentType};base64,${Buffer.from(image.img.data).toString('base64')}`
        setBackend_image4(source);
        setLeft_on(1)
    }



      });
  }, [props.material, images]); 


  const fetchImages = async () => {
    try {
      //const response = await axios.get('http://13.201.251.105/:5000/send_image');http://localhost:5000/send_image
      const response = await axios.get('http://13.201.251.105/:5000/send_image');
      setImages(response.data);
    } catch (error) {
      console.error('Error fetching images:', error);
    }
  };




  let textureprops
  let textureprops2

let textureprops3

let textureprops4

  if (iamge_backend) {
      textureprops = useTexture({
          map: iamge_backend,
      });
  }


  else {

      textureprops = useTexture({
          map: polyster,
      })

  }

  if (iamge_backend2) {
    textureprops2 = useTexture({
        map: iamge_backend2,
    });
}


else {

    textureprops2 = useTexture({
        map: polyster,
    })

}
if (iamge_backend3) {
  textureprops3 = useTexture({
      map: iamge_backend3,
  });
}


else {

  textureprops3 = useTexture({
      map: polyster,
  })

}
if (iamge_backend4) {
  textureprops4 = useTexture({
      map: iamge_backend4,
  });
}


else {

  textureprops4 = useTexture({
      map: polyster,
  })

}



console.log(textureprops2)

  const selected_part=props.part_selected

  const { nodes, materials } = useGLTF('/crop_top_leo.glb')
  return (
    <group {...props} dispose={null} >
      
      {/* front mesh */}
      
      <mesh geometry={nodes.Pattern_24855.geometry} material={materials.Cotton_Canvas_FRONT_2656} >
      {(selected_part === "Front Part" || front_on === 1)  && (
        <meshStandardMaterial {...textureprops} />
    )}
      


        </mesh>
    {/* front mesh */}

      <mesh geometry={nodes.Pattern_24855_1.geometry} material={materials.Cotton_Canvas_FRONT_2656} >

      {(selected_part === "Front Part" || front_on === 1)  && (
        <meshStandardMaterial {...textureprops} />
    )}
      

        </mesh>



      <mesh geometry={nodes.Pattern_24855_2.geometry} material={materials.Cotton_Canvas_FRONT_2656} >

      {(selected_part === "Front Part" || front_on === 1)  && (
        <meshStandardMaterial {...textureprops} />
    )}
      


        </mesh>






      {/* back mesh */}

      <mesh geometry={nodes.Pattern_24856.geometry} material={materials.Cotton_Canvas_FRONT_2656} >

      {(selected_part === "Back Part" || back_on === 1)  && (
        <meshStandardMaterial {...textureprops2} />
    )}
      


        </mesh>
      <mesh geometry={nodes.Pattern_24856_1.geometry} material={materials.Cotton_Canvas_FRONT_2656} >
      {(selected_part === "Back Part" || back_on === 1)  && (
        <meshStandardMaterial {...textureprops2} />
    )}
      

</mesh>

      <mesh geometry={nodes.Pattern_24856_2.geometry} material={materials.Cotton_Canvas_FRONT_2656} >
      {(selected_part === "Back Part" || back_on === 1)  && (
        <meshStandardMaterial {...textureprops2} />
    )}
      

        </mesh>





{/* right mesh */}



<mesh geometry={nodes.Pattern_36841.geometry} material={materials.Cotton_Canvas_FRONT_2656} >

{(selected_part === "Rigt Hand" || right_on === 1)  && (
  <meshStandardMaterial {...textureprops3} />
)}


  </mesh>



<mesh geometry={nodes.Pattern_36841_1.geometry} material={materials.Cotton_Canvas_FRONT_2656} >


{(selected_part === "Rigt Hand" || right_on === 1)  && (
  <meshStandardMaterial {...textureprops3} />
)}


 </mesh> 
<mesh geometry={nodes.Pattern_36841_2.geometry} material={materials.Cotton_Canvas_FRONT_2656} >

{(selected_part === "Rigt Hand" || right_on === 1)  && (
  <meshStandardMaterial {...textureprops3} />
)}


</mesh>


{/* left mesh */}

<mesh geometry={nodes.Pattern_117295.geometry} material={materials.Cotton_Canvas_FRONT_2656} >

{(selected_part === "Right Hand" || right_on === 1)  && (
  <meshStandardMaterial {...textureprops4} />
)}

  </mesh>
<mesh geometry={nodes.Pattern_117295_1.geometry} material={materials.Cotton_Canvas_FRONT_2656} >

{(selected_part === "Right Hand" || right_on === 1)  && (
  <meshStandardMaterial {...textureprops4} />
)}

  </mesh>

<mesh geometry={nodes.Pattern_117295_2.geometry} material={materials.Cotton_Canvas_FRONT_2656} >
{(selected_part === "Right Hand" || right_on === 1)  && (
  <meshStandardMaterial {...textureprops4} />
)}



  </mesh>
<mesh geometry={nodes.Pattern_200678.geometry} material={materials.Cotton_Canvas_FRONT_2656} >
{(selected_part === "Right Hand" || right_on === 1)  && (
  <meshStandardMaterial {...textureprops4} />
)}


  </mesh>
<mesh geometry={nodes.Pattern_200678_1.geometry} material={materials.Cotton_Canvas_FRONT_2656} >

{(selected_part === "Right Hand" || right_on === 1)  && (
  <meshStandardMaterial {...textureprops4} />
)}

  </mesh>



<mesh geometry={nodes.Pattern_200678_2.geometry} material={materials.Cotton_Canvas_FRONT_2656} >

{(selected_part === "Right Hand" || right_on === 1)  && (
  <meshStandardMaterial {...textureprops4} />
)}


  </mesh>









         {/* left mesh */}
      <mesh geometry={nodes.Pattern_36842.geometry} material={materials.Cotton_Canvas_FRONT_2656} >

      {(selected_part === "Left Hand" || left_on === 1)  && (
        <meshStandardMaterial {...textureprops4} />
    )}
      
        </mesh>
      <mesh geometry={nodes.Pattern_36842_1.geometry} material={materials.Cotton_Canvas_FRONT_2656} >

      {(selected_part === "Left Hand" || left_on === 1)  && (
        <meshStandardMaterial {...textureprops4} />
    )}
      
        </mesh>
      <mesh geometry={nodes.Pattern_36842_2.geometry} material={materials.Cotton_Canvas_FRONT_2656} >
      {(selected_part === "Left Hand" || left_on === 1)  && (
        <meshStandardMaterial {...textureprops4} />
    )}
        </mesh>


{/* left */}
      
      <mesh geometry={nodes.Pattern_117296.geometry} material={materials.Cotton_Canvas_FRONT_2656} >

      {(selected_part === "Left Hand" || left_on=== 1)  && (
        <meshStandardMaterial {...textureprops4} />
    )}
      
        </mesh>
      <mesh geometry={nodes.Pattern_117296_1.geometry} material={materials.Cotton_Canvas_FRONT_2656} >
      {(selected_part === "Left Hand" || left_on === 1)  && (
        <meshStandardMaterial {...textureprops4} />
    )}
      
        </mesh>
      <mesh geometry={nodes.Pattern_117296_2.geometry} material={materials.Cotton_Canvas_FRONT_2656} >
      {(selected_part === "Left Hand" || left_on === 1)  && (
        <meshStandardMaterial {...textureprops4} />
    )}
      
        </mesh>
      <mesh geometry={nodes.Pattern_200679.geometry} material={materials.Cotton_Canvas_FRONT_2656} >
      {(selected_part === "Left Hand" || left_on === 1)  && (
        <meshStandardMaterial {...textureprops4} />
    )}
      

</mesh>

      <mesh geometry={nodes.Pattern_200679_1.geometry} material={materials.Cotton_Canvas_FRONT_2656} >
      {(selected_part === "Left Hand" || left_on === 1)  && (
        <meshStandardMaterial {...textureprops4} />
    )}
      

        </mesh>
      <mesh geometry={nodes.Pattern_200679_2.geometry} material={materials.Cotton_Canvas_FRONT_2656} >

      {(selected_part === "Left Hand" || left_on === 1)  && (
        <meshStandardMaterial {...textureprops4} />
    )}
      
        </mesh>
    </group>
  )
}

useGLTF.preload('/crop_top_leo.glb')
